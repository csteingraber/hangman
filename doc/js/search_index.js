var search_data = {"index":{"searchIndex":["computer","hangman","player","choose_word()","load()","new()","new()","prompt()","respond_to_guess()","save()","start()","5desk","readme","saves.yaml"],"longSearchIndex":["computer","hangman","player","computer#choose_word()","hangman#load()","computer::new()","hangman::new()","player#prompt()","computer#respond_to_guess()","hangman#save()","hangman#start()","","",""],"info":[["Computer","","Computer.html","","<p>This class contains the word to be guessed and the current state of the\ngame. It has the functionality …\n"],["Hangman","","Hangman.html","","<p>This class acts as a container for the Computer and Player class and \nmediates gameplay between the two. …\n"],["Player","","Player.html","","<p>This class contains the functionality to prompt the user of the game for\ninput and to sanitize that input. …\n"],["choose_word","Computer","Computer.html#method-i-choose_word","()","<p>Reads in the 5desk.txt file and returns a random 5-12 character string.\n"],["load","Hangman","Hangman.html#method-i-load","()","<p>This asks the user if they want to load a previous game and loads in the\nold values of @computer from …\n"],["new","Computer","Computer.html#method-c-new","()",""],["new","Hangman","Hangman.html#method-c-new","()","<p>Creates a new Computer and Player Object and starts the game between the\ntwo.\n"],["prompt","Player","Player.html#method-i-prompt","()","<p>Prompts the user for a single case-insensitive  letter and verifies that it\nis only one character and …\n"],["respond_to_guess","Computer","Computer.html#method-i-respond_to_guess","(letter)","<p>Takes in a string corresponding to a single letter and updates instance\nvariables and displays hangman. …\n"],["save","Hangman","Hangman.html#method-i-save","()","<p>This asks the user if they want to save the game and will write the\ncontents of @computer to YAML.\n"],["start","Hangman","Hangman.html#method-i-start","()","<p>Starts a loop of player prompting and computer responses until the word is\nguessed or the hangman is …\n"],["5desk","","5desk_txt.html","","<p>A a Aachen Aalborg aardvark Aarhus Aaron AB Ab abaci aback abacus Abadan\nabaft abalone abandon abandoned …\n"],["README","","README_md.html","","<p>Hangman\n<p>This project showcases experience with Object Oriented Programming, File\nIO, and Serialization …\n"],["saves.yaml","","saves_yaml.html","","<p>— !ruby/object:Computer word: asphodel incorrect_letters:\n<p>q\n<p>x\n"]]}}